# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                    controllers.App.index

#GET     /test/:str                          controllers.App.test(str:String)
GET         /test                                controllers.App.test()
GET         /api/tweet/public_tweets             controllers.Tweet.publicTweets(last_id:Long ?=9999999, sort:String ?="time", limit:Int ?= 30, ownerId:Long ?= -1)
GET         /api/tweet/private_tweets            controllers.PrivateTweet.privateTweets(last_id:Long ?=9999999, sort:String ?="time", limit:Int ?= 30)
GET         /api/token                           controllers.App.qiniuToken()
GET         /api/tweet/:id/comments              controllers.Comment.comments(id: Long, pageSize: Integer)
GET         /api/challenge/:topCount             controllers.Challenge.getTodayTopChallengeRecorad(topCount: Integer)
GET         /api/challenge/week/:topCount        controllers.Challenge.getCurrentWeekChallengeRecord(topCount: Integer)
GET         /api/train/:topCount                 controllers.Train.getTodayTopTrainRecorad(topCount: Integer)
GET         /api/train/week/:topCount            controllers.Train.getCurrentWeekTrainRecord(topCount: Integer)

GET         /api/challenge_count                 controllers.Challenge.getTodayChallengeCount()
GET         /api/train_count                     controllers.Train.getTodayFinishedTrainCount()
GET         /api/post/:lastId                    controllers.Post.getCollectedPosts(lastId:Long)
GET         /api/sync/download/:table            controllers.Sync.downloadDayRecord(table:String, limit:Int ?= 60)

#user
GET         /api/user/followed_count             controllers.User.getFollowedCount(ownerId:Long ?= -1)
GET         /api/user/follow_count               controllers.User.getFollowCount(ownerId:Long ?= -1)
GET         /api/current_user                    controllers.User.currentUser()
GET         /api/user/key/:uid                   controllers.User.user(uid:String)
GET         /api/user/followers                  controllers.User.getFollowList(ownerId: Long ?= -1, page:Int ?= 1, pageSize:Int ?= 500)
GET         /api/user/friends                    controllers.User.getFollowedList(ownerId: Long ?= -1, page:Int ?= 1, pageSize:Int ?= 500)
GET         /api/user/followers/:ownerId         controllers.User.getFollowList(ownerId: Long , page:Int ?= 1, pageSize:Int ?= 500)
GET         /api/user/friends/:ownerId           controllers.User.getFollowedList(ownerId: Long , page:Int ?= 1, pageSize:Int ?= 500)

POST        /api/user/follow                     controllers.User.follow()
POST        /api/user/unfollow                   controllers.User.unFollow()
#end user

POST        /api/tweet                           controllers.Tweet.publishTweet()
POST        /api/private_tweet                   controllers.PrivateTweet.publishPrivateTweet()
POST        /api/tweet_xiaohao                   controllers.Tweet.publishTweetByXiaoHao()
POST        /api/tweet/:id/star/:type            controllers.Tweet.star(id: Long, type: String)
POST        /api/tweet/:id/comment               controllers.Comment.publishComment(id :Long)
POST        /api/login                           controllers.User.login()
POST        /api/challenge/submit                controllers.Challenge.submitChallengeRecord()
POST        /api/train/submit                    controllers.Train.submitTrainRecord()
POST        /api/post/collect                    controllers.Post.collectPost()
POST        /api/sync/upload                     controllers.Sync.upload()

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                        controllers.Assets.at(path="/public", file)
GET         /public/*file                        controllers.Assets.at(path = "/public", file)
GET         /download                            controllers.Assets.at(path = "/public/html", file = "downloadDayRecord.html")
GET         /images/*file                        controllers.Assets.at(path = "/public/images", file)
GET         /css/*file                           controllers.Assets.at(path = "/public/css", file)
GET         /js/*file                            controllers.Assets.at(path = "/public/js", file)

#for wx
GET         /api/wx                              controllers.WxController.checkSignature()
POST        /api/wx                              controllers.WxController.handleMessage()
GET         /api/wx/daily_post_list              controllers.WxController.todayPostList(category_id:Int ?=1)
GET         /api/wx/post/:id                     controllers.WxController.post(id:Long)

#start wallpaper
GET         /api/wallpaper/wallpapers            controllers.WallpaperController.getWallpagers(t:Int ?= 4)
GET         /api/wallpaper/submit                controllers.WallpaperController.submit(imageUrl:String, name:String ?= "", author:String ?= "", desc:String ?= "")
#end wallpaper
